/* В структурах хранится информация о студентах. Одним из элементов структуры является объединение,
в котором, в зависимости от места жительства (иногородний студент или нет), информация задается в виде:
а) область, город …, ул. …, д. …, кв. …;
б) область …, район …, город …, ул. …, д. …, кв. …;
По запросу из командной строки, в зависимости от вида информации,
вывести данные о тех или иных студентах, используя указатели на функции.*/
#include <stdio.h>
#include <conio.h>
#include <windows.h>
#include <locale.h>
struct student
{
	char FIO[256];
	char town[256];
	char oblast[256];
	char raion[256];
	char street[256];
	int home;
	int apartament;
};
int main()
{
	setlocale(LC_ALL, "Russian");
	int count, n;
	printf("number of srudents:");
	scanf_s("%d", &n);
	struct student *first;
	first = (struct student*)malloc(n * sizeof(struct student));
	system("cls");
	for (count = 0; count < n; count++)
	{
		printf("student[%d]:\n", count + 1);
		rewind(stdin);
		    printf("enter FIO:");
		    gets_s(first[count].FIO);
		    printf("enter oblast:");
		    gets_s(first[count].oblast);
			printf("vvedite raion:");
			gets_s(first[count].raion);
			printf("enter city:");
			gets_s(first[count].town);
			printf("enter street:");
			gets_s(first[count].street);
			printf("enter home:");
			scanf_s("%d", &first[count].home);
			printf("enter appartament:");
			scanf_s("%d", &first[count].apartament);
		    system("cls");
	}
	for (count = 0; count < n; count++)
	{
		printf("student [%d]:\n", count + 1);
		printf("name:%s\noblast:%s\ntown:%s\nstreet:%s\ndom:%d\napp:%d\n", first[count].FIO, first[count].oblast, first[count].town, first[count].street, first[count].home, first[count].apartament);
	}
	free(first);
	return 0;
}
===========================================================================================================================================================================================================================================
#include <stdio.h>
#include <conio.h>
#include <windows.h>
#include <locale.h>
#define len 15
struct name 
{
	char FIO[len];
union student
{
	struct s1
	{
		name a;
		char oblast[len];
		char raion[len];
		char town[len];
		char street[len];
		int house;
		int app;
	}t1;
	struct s2
	{
		name a;
		char oblast[len];
		char town[len];
		char street[len];
		int house;
		int app;
	}t2;
};
};
void zapolnenie1(name*,student*, int n);
void zapolnenie2(name*,student*, int n);
int main()
{
	setlocale(LC_ALL, "Russian");
	name *st1;
	student *st2;
	st1 = 0;
	st2 = 0;
	int n, k, g,f;
	do
	{
		rewind(stdin);
		printf("Количество учащихся?");
	} while (!scanf_s("%d", &n) || n <= 0);
	do
	{
		rewind(stdin);
		printf("Cтудент из 1-города или из 2-села?");
		g = scanf_s("%d", &k);
	} while (!g || k != 1 && k != 2);
	switch (k)
	{
	case 1:
	{

		if (!(st1 = (name*)malloc(n * sizeof(name))))
		{
			if (!(st2 = (student*)malloc(n * sizeof(student))))
			{

				return 0;
			}
		}
		zapolnenie1(st1, st2, n);
		system("cls");
	}break;
	case 2:
	{

		if (!(st1 = (name*)malloc(n * sizeof(name))))
		{
			if (!(st2 = (student*)malloc(n * sizeof(student))))
			{

				return 0;
			}
		}
		zapolnenie2(st1, st2, n);
		system("cls");
	}break;
	}
	do
	{
		rewind(stdin);
		printf("Информацию о ком вывести? 1-район || 2-город");
		scanf_s("%d", &f);
	} while (f != 1 && f != 2);
	switch (f)
	{
	case 1:
	{
		for (int i = 0; i < n; i++)
		{
			printf("Информация о районных студентах:\n");
			printf("Имя студента %s\n", st2->t1.a.FIO);
			printf("Область %s\n", st2->t1.oblast);
			printf("Район %s\n", st2->t1.raion);
			printf("Город %s\n", st2->t1.town);
			printf("Улица %s, дом %d, квартира %d", st2->t1.street, st2->t1.house, st2->t1.app);
		}
	}break;
	case 2:
	{
		for (int i = 0; i < n; i++)
		{
			printf("Информация о городских студентах:\n");
			printf("Имя студента %s\n", st2->t2.a.FIO);
			printf("Область %s\n", st2->t2.oblast);
			printf("Город %s\n", st2->t2.town);
			printf("Улица %s, дом %d, квартира %d", st2->t2.street, st2->t2.house, st2->t2.app);
		}
	}break;
	}
	return 0;
}
	void zapolnenie1(name* st1, student* st2, int n)
	{
		for (int i = 0; i < n; i++)
		{
			system("cls");
			rewind(stdin);
			printf("Введите имя:");
			gets_s(st2->t1.a.FIO);
			printf("Введите область:");
			gets_s(st2->t1.oblast);
			printf("Введите район:");
			gets_s(st2->t1.raion);
			printf("Введите город:");
			gets_s(st2->t1.town);
			printf("Введите улицу:");
			gets_s(st2->t1.street);
			printf("Введите дом:");
			scanf_s("%d",&st2->t1.house);
			printf("Введите квартиру:");
			scanf_s("%d",&st2->t1.app);
		}
	}
	void zapolnenie2(name* st1, student* st2, int n)
	{
		for (int i = 0; i < n; i++)
		{
			system("cls");
			rewind(stdin);
			printf("Введите имя:");
			gets_s(st2->t2.a.FIO);
			printf("Введите область:");
			gets_s(st2->t2.oblast);
			printf("Введите город:");
			gets_s(st2->t2.town);
			printf("Введите улицу:");
			gets_s(st2->t2.street);
			printf("Введите дом:");
			scanf_s("%d", st2->t2.house);
			printf("Введите квартиру:");
			scanf_s("%d", st2->t2.app);
		}
	}

==========================================================================================================================================================================================================================================
#include <stdio.h>
#include <conio.h>
#include <windows.h>
#include <locale.h>
#define len 15
struct name
{
	char FIO[len];
};
union student
{
	struct s1
	{
		name a;
		char oblast[len];
		char raion[len];
		char town[len];
		char street[len];
		int house;
		int app;
	}t1;
	struct s2
	{
		name a;
		char oblast[len];
		char town[len];
		char street[len];
		int house;
		int app;
	}t2;
};
void zapolnenie1(name*, student*, int n);
void zapolnenie2(name*, student*, int n);
int main()
{
	system("chcp 1251>0");
	name *st1;
	student *st2;
	st1 = 0; st2 = 0;
	int n, k, g, f;
	do
	{
		rewind(stdin);
		printf("Количество учащихся?");
	} while (!scanf_s("%d", &n) || n <= 0);
	st1 = (name*)malloc(n * sizeof(name));
	st2 = (student*)malloc(n * sizeof(student));
	for (int i = 0; i < n; i++)
	{
		do
		{
			rewind(stdin);
			printf("Cтудент из 1-города или из 2-села?");
			g = scanf_s("%d", &k);
		} while (!g || k != 1 && k != 2);
		if (k == 1)
		{
			zapolnenie2(st1, st2, n);
			system("cls");
		}
		if (k == 2)
		{
			zapolnenie1(st1, st2, n);
			system("cls");
		}
	}
	do
	{
		rewind(stdin);
		printf("Информацию о ком вывести? 1-район || 2-город");
		scanf_s("%d", &f);
	} while (f != 1 && f != 2);
	switch (f)
	{
	case 1:
	{
		printf("Информация о районных студентах:\n");
		for (int i = 0; i < n; i++)
		{
			printf("Имя студента %s\n", st2->t1.a.FIO);
			printf("Область %s\n", st2->t1.oblast);
			printf("Район %s\n", st2->t1.raion);
			printf("Город %s\n", st2->t1.town);
			printf("Улица %s, дом %d, квартира %d", st2->t1.street, st2->t1.house, st2->t1.app);
		}
	}
	case 2:
	{
		printf("Информация о городских студентах:\n");
		for (int i = 0; i < n; i++)
		{
			printf("Имя студента %s\n", st2->t2.a.FIO);
			printf("Область %s\n", st2->t2.oblast);
			printf("Город %s\n", st2->t2.town);
			printf("Улица %s, дом %d, квартира %d\n", st2->t2.street, st2->t2.house, st2->t2.app);
		}
	}
	}
	free(st1);
	free(st2);
	return 0;
}
void zapolnenie1(name* st1, student* st2, int n)
{
		system("cls");
		rewind(stdin);
		printf("Введите имя:");
		gets_s(st2->t1.a.FIO);
		printf("Введите область:");
		gets_s(st2->t1.oblast);
		printf("Введите район:");
		gets_s(st2->t1.raion);
		printf("Введите город:");
		gets_s(st2->t1.town);
		printf("Введите улицу:");
		gets_s(st2->t1.street);
		printf("Введите дом:");
		scanf_s("%d",&st2->t1.house);
		printf("Введите квартиру:");
		scanf_s("%d",&st2->t1.app);
}
void zapolnenie2(name* st1, student* st2, int n)
{
		system("cls");
		rewind(stdin);
		printf("Введите имя:");
		gets_s(st2->t2.a.FIO);
		printf("Введите область:");
		gets_s(st2->t2.oblast);
		printf("Введите город:");
		gets_s(st2->t2.town);
		printf("Введите улицу:");
		gets_s(st2->t2.street);
		printf("Введите дом:");
		scanf_s("%d", &st2->t2.house);
		printf("Введите квартиру:");
		scanf_s("%d", &st2->t2.app);
}
